module operator_button (
    input clk,       // clock
    input rst,       // reset
    input button,    // button input
    output op[3]  // press counter
  ) {
   
  .clk(clk) {
    edge_detector edge_detector(#RISE(1), #FALL(0)); // detect rising edges
     
    button_conditioner button_cond;     // button input conditioner
     
    .rst(rst) {
       dff ctr[3](.d(1)); // setting the init state to 1
    }
  }
 
  always { 
    if (ctr.q == 0)
      ctr.d = 1;
    button_cond.in = button;            // raw button input
    edge_detector.in = button_cond.out; // input to the edge_detector
    op = ctr.q;                      // output the counter
     
    if (edge_detector.out)              // if edge detected
      ctr.d = ctr.q + 1;                // add one to the counter
      if (ctr.q > 4)
        ctr.d = 1;
  }
}
