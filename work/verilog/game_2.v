/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_2 (
    input rst,
    input clk,
    input [6:0] buttons,
    output reg [17:0] op,
    output reg [35:0] num
  );
  
  
  
  integer i;
  
  reg [2:0] lvl;
  reg [17:0] opTemp;
  
  wire [36-1:0] M_levels_num;
  wire [18-1:0] M_levels_op;
  levels_7 levels (
    .levelSelected(lvl),
    .num(M_levels_num),
    .op(M_levels_op)
  );
  
  reg [2:0] M_lvls_d, M_lvls_q = 1'h0;
  localparam PLUS_state = 2'd0;
  localparam MINUS_state = 2'd1;
  localparam MUL_state = 2'd2;
  localparam DIV_state = 2'd3;
  
  reg [1:0] M_state_d, M_state_q = PLUS_state;
  wire [3-1:0] M_operator_button1_op;
  operator_button_8 operator_button1 (
    .clk(clk),
    .rst(rst),
    .button(buttons[0+0-:1]),
    .op(M_operator_button1_op)
  );
  wire [3-1:0] M_operator_button2_op;
  operator_button_8 operator_button2 (
    .clk(clk),
    .rst(rst),
    .button(buttons[1+0-:1]),
    .op(M_operator_button2_op)
  );
  wire [3-1:0] M_operator_button3_op;
  operator_button_8 operator_button3 (
    .clk(clk),
    .rst(rst),
    .button(buttons[2+0-:1]),
    .op(M_operator_button3_op)
  );
  wire [3-1:0] M_operator_button4_op;
  operator_button_8 operator_button4 (
    .clk(clk),
    .rst(rst),
    .button(buttons[3+0-:1]),
    .op(M_operator_button4_op)
  );
  wire [3-1:0] M_operator_button5_op;
  operator_button_8 operator_button5 (
    .clk(clk),
    .rst(rst),
    .button(buttons[4+0-:1]),
    .op(M_operator_button5_op)
  );
  wire [3-1:0] M_operator_button6_op;
  operator_button_8 operator_button6 (
    .clk(clk),
    .rst(rst),
    .button(buttons[5+0-:1]),
    .op(M_operator_button6_op)
  );
  
  always @* begin
    M_lvls_d = M_lvls_q;
    
    opTemp[0+2-:3] = M_operator_button1_op;
    opTemp[3+2-:3] = M_operator_button2_op;
    opTemp[6+2-:3] = M_operator_button3_op;
    opTemp[9+2-:3] = M_operator_button4_op;
    opTemp[12+2-:3] = M_operator_button5_op;
    opTemp[15+2-:3] = M_operator_button6_op;
    op = opTemp;
    lvl = M_lvls_q;
    if (opTemp == M_levels_op) begin
      M_lvls_d = M_lvls_q + 1'h1;
    end
    num = M_levels_num;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_lvls_q <= 1'h0;
    end else begin
      M_lvls_q <= M_lvls_d;
    end
  end
  
  
  always @(posedge clk) begin
    M_state_q <= M_state_d;
  end
  
endmodule
