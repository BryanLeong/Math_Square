/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg mosi0,
    output reg cs0,
    output reg sck0,
    output reg mosi1,
    output reg cs1,
    output reg sck1,
    output reg mosi2,
    output reg cs2,
    output reg sck2
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_display_mosi0;
  wire [1-1:0] M_display_cs0;
  wire [1-1:0] M_display_sck0;
  wire [1-1:0] M_display_mosi1;
  wire [1-1:0] M_display_cs1;
  wire [1-1:0] M_display_sck1;
  wire [1-1:0] M_display_mosi2;
  wire [1-1:0] M_display_cs2;
  wire [1-1:0] M_display_sck2;
  reg [36-1:0] M_display_num;
  reg [18-1:0] M_display_op;
  display_1 display (
    .clk(clk),
    .rst(rst),
    .num(M_display_num),
    .op(M_display_op),
    .mosi0(M_display_mosi0),
    .cs0(M_display_cs0),
    .sck0(M_display_sck0),
    .mosi1(M_display_mosi1),
    .cs1(M_display_cs1),
    .sck1(M_display_sck1),
    .mosi2(M_display_mosi2),
    .cs2(M_display_cs2),
    .sck2(M_display_sck2)
  );
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    mosi0 = M_display_mosi0;
    cs0 = M_display_cs0;
    sck0 = M_display_sck0;
    mosi1 = M_display_mosi1;
    cs1 = M_display_cs1;
    sck1 = M_display_sck1;
    mosi2 = M_display_mosi2;
    cs2 = M_display_cs2;
    sck2 = M_display_sck2;
    M_display_num[0+0+3-:4] = 3'h5;
    M_display_num[0+4+3-:4] = 3'h4;
    M_display_num[0+8+3-:4] = 4'h9;
    M_display_num[12+0+3-:4] = 2'h3;
    M_display_num[12+4+3-:4] = 2'h3;
    M_display_num[12+8+3-:4] = 1'h1;
    M_display_num[24+0+3-:4] = 4'h8;
    M_display_num[24+4+3-:4] = 1'h1;
    M_display_num[24+8+3-:4] = 4'h8;
    M_display_op[0+2-:3] = 1'h1;
    M_display_op[3+2-:3] = 1'h1;
    M_display_op[6+2-:3] = 2'h2;
    M_display_op[9+2-:3] = 2'h2;
    M_display_op[12+2-:3] = 3'h4;
    M_display_op[15+2-:3] = 3'h4;
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    led = 8'h00;
  end
endmodule
