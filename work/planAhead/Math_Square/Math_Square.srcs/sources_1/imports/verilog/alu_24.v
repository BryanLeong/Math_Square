/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_24 (
    input [7:0] a,
    input [7:0] b,
    input [5:0] alufn,
    output reg z,
    output reg v,
    output reg n,
    output reg [7:0] result
  );
  
  
  
  wire [8-1:0] M_compare0_result;
  reg [1-1:0] M_compare0_z;
  reg [1-1:0] M_compare0_v;
  reg [1-1:0] M_compare0_n;
  compare_25 compare0 (
    .alufn(alufn),
    .z(M_compare0_z),
    .v(M_compare0_v),
    .n(M_compare0_n),
    .result(M_compare0_result)
  );
  wire [8-1:0] M_adder0_result;
  wire [1-1:0] M_adder0_z;
  wire [1-1:0] M_adder0_v;
  wire [1-1:0] M_adder0_n;
  adder_26 adder0 (
    .alufn(alufn),
    .a(a),
    .b(b),
    .result(M_adder0_result),
    .z(M_adder0_z),
    .v(M_adder0_v),
    .n(M_adder0_n)
  );
  wire [8-1:0] M_boolean0_result;
  boolean_27 boolean0 (
    .alufn(alufn),
    .a(a),
    .b(b),
    .result(M_boolean0_result)
  );
  wire [8-1:0] M_shifter0_result;
  shifter_28 shifter0 (
    .alufn(alufn),
    .a(a),
    .b(b),
    .result(M_shifter0_result)
  );
  
  always @* begin
    z = M_adder0_z;
    v = M_adder0_v;
    n = M_adder0_n;
    M_compare0_z = M_adder0_z;
    M_compare0_v = M_adder0_v;
    M_compare0_n = M_adder0_n;
    
    case (alufn[4+1-:2])
      2'h0: begin
        result = M_adder0_result;
      end
      2'h1: begin
        result = M_boolean0_result;
      end
      2'h2: begin
        result = M_shifter0_result;
      end
      2'h3: begin
        result = M_compare0_result;
      end
      default: begin
        result = 1'h0;
      end
    endcase
  end
endmodule
